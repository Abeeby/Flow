// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model User {
  id            String        @id @default(cuid())
  name          String
  email         String        @unique
  password      String
  role          String        @default("CLIENT")
  createdAt     DateTime      @default(now())
  updatedAt     DateTime      @updatedAt
  orders        Order[]
  notifications Notification[]
}

model Product {
  id          String        @id @default(cuid())
  name        String
  description String
  price       Float
  image       String?
  category    String
  available   Boolean       @default(true)
  ingredients Ingredient[]
  orderItems  OrderItem[]
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt
}

model Ingredient {
  id        String    @id @default(cuid())
  name      String
  quantity  Float
  unit      String
  products  Product[]
  wasted    Float     @default(0)
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model Order {
  id           String      @id @default(cuid())
  user         User        @relation(fields: [userId], references: [id])
  userId       String
  status       String      @default("PENDING")
  items        OrderItem[]
  total        Float
  estimatedTime Int?
  createdAt    DateTime    @default(now())
  updatedAt    DateTime    @updatedAt
}

model OrderItem {
  id        String  @id @default(cuid())
  order     Order   @relation(fields: [orderId], references: [id])
  orderId   String
  product   Product @relation(fields: [productId], references: [id])
  productId String
  quantity  Int
  price     Float
}

model Notification {
  id        String   @id @default(cuid())
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  message   String
  read      Boolean  @default(false)
  createdAt DateTime @default(now())
}

model Waste {
  id           String   @id @default(cuid())
  ingredientName String
  quantity     Float
  reason       String?
  date         DateTime @default(now())
}

model Statistics {
  id           String   @id @default(cuid())
  date         DateTime @default(now())
  totalSales   Float    @default(0)
  totalOrders  Int      @default(0)
  popularItems String?
}
